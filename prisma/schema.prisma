generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model academy {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  event       event[]
  player      player[]
}

model event {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  academy_id String   @db.Uuid
  name       String   @db.VarChar(255)
  date       DateTime @db.Date
  location   String   @db.VarChar(255)
  type       String   @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  academy    academy  @relation(fields: [academy_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model performance {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  player_id  String   @db.Uuid
  date       DateTime @db.Date
  score      Int
  notes      String?  @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  player     player   @relation(fields: [player_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model player {
  id            String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id       String        @db.Uuid
  academy_id    String        @db.Uuid
  position      String        @db.VarChar(255)
  date_of_birth DateTime      @db.Date
  height        Int
  weight        Int
  created_at    DateTime      @default(now()) @db.Timestamp(6)
  updated_at    DateTime      @default(now()) @db.Timestamp(6)
  performance   performance[]
  academy       academy       @relation(fields: [academy_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user          user          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String    @unique @db.VarChar(255)
  firstName   String?   @db.VarChar(255)
  lastName    String?   @db.VarChar(255)
  roq_user_id String    @db.VarChar(255)
  tenant_id   String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  academy     academy[]
  player      player[]
}
